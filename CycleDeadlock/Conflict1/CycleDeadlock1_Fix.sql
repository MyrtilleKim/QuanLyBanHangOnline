USE qlbh_onl
GO

DROP PROC USP_CyDL1
DROP PROC USP_CyDL2
GO

--Trans1
CREATE
--ALTER
PROC USP_CyDL1
	@NguoiDaiDien nvarchar(30),
	@DiaChi nvarchar(30),
	@MaDT char(6),
	@MaCN char(6)
AS
BEGIN
BEGIN TRAN

SET TRAN ISOLATION LEVEL READ COMMITTED

	IF @MaCN NOT IN (SELECT BranchID FROM BRANCH)
	BEGIN
		PRINT @MaCN + 'not a branch of the partner'
		ROLLBACK TRAN
		RETURN 1
	END

		ELSE
		WAITFOR DELAY '0:0:01'

	BEGIN TRY	
		UPDATE PARTNERS
		SET Representative = @NguoiDaiDien
		WHERE PartnerID = @MaDT
		
		UPDATE BRANCH
		SET Addr = @DiaChi
		WHERE BranchID = @MaCN
	END TRY

	BEGIN CATCH
		DECLARE @ErrorMsg VARCHAR(2000)
		SELECT @ErrorMsg = 'ERROR: ' + ERROR_MESSAGE()
		RAISERROR(@ErrorMsg, 16,1)
		ROLLBACK TRAN
		RETURN
	END CATCH
		
COMMIT TRAN
END
GO

--Trans2
CREATE
--ALTER
PROC USP_CyDL2
	@NguoiDaiDien nvarchar(30),
	@DiaChi nvarchar(30),
	@MaDT char(6),
	@MaCN char(6)
AS
BEGIN TRAN

SET TRAN ISOLATION LEVEL READ COMMITTED

	IF @MaCN NOT IN (SELECT BranchID FROM BRANCH)
	BEGIN
		PRINT @MaCN + 'not a branch of the partner'
		ROLLBACK TRAN
		RETURN 1
	END
		ELSE

	BEGIN TRY
		UPDATE PARTNERS
		SET Representative = @NguoiDaiDien
		WHERE PartnerID = @MaDT
	
		UPDATE BRANCH
		SET Addr = @DiaChi
		WHERE BranchID = @MaCN
	END TRY

	BEGIN CATCH
		DECLARE @ErrorMsg VARCHAR(2000)
		SELECT @ErrorMsg = 'ERROR: ' + ERROR_MESSAGE()
		RAISERROR(@ErrorMsg, 16,1)
		ROLLBACK TRAN
		RETURN
	END CATCH
		
COMMIT TRAN
GO