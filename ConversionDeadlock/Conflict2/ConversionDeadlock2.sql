USE qlbh_onl
GO

DROP PROC USP_CoDL1
DROP PROC USP_CoDL2
GO

--Trans1
CREATE
--ALTER
PROC USP_CoDL1
	@NDD varchar(100),
	@MaDT char(6)
AS
BEGIN
BEGIN TRAN

SET TRAN ISOLATION LEVEL REPEATABLE READ

	DECLARE @NDD_HT varchar(100)
	SET @NDD_HT = (SELECT Representative FROM PARTNERS WHERE PartnerID = @MaDT)
	IF (@NDD = @NDD_HT)
	BEGIN
		PRINT 'New representative you want to change is the same as one before'
		ROLLBACK TRAN
		RETURN 1
	END

		ELSE
		WAITFOR DELAY '0:0:05'

	BEGIN TRY	
		UPDATE PARTNERS
		SET Representative = @NDD
		WHERE PartnerID = @MaDT	
	END TRY

	BEGIN CATCH
		DECLARE @ErrorMsg VARCHAR(2000)
		SELECT @ErrorMsg = 'ERROR: ' + ERROR_MESSAGE()
		RAISERROR(@ErrorMsg, 16,1)
		ROLLBACK TRAN
		RETURN
	END CATCH
		
COMMIT TRAN
END
GO

--Trans2
CREATE
--ALTER
PROC USP_CoDL2
	@DiaChi varchar(50),
	@MaDT char(6)
AS
BEGIN TRAN

SET TRAN ISOLATION LEVEL REPEATABLE READ

	DECLARE @DiaChi_HT varchar(50)
	SET @DiaChi_HT = (SELECT Addr FROM PARTNERS WHERE PartnerID = @MaDT)
	IF (@DiaChi = @DiaChi_HT)
	BEGIN
		PRINT 'New address you want to change is the same as one before'  
		ROLLBACK TRAN
		RETURN 1
	END

		ELSE
		WAITFOR DELAY '0:0:05'

	BEGIN TRY
		UPDATE PARTNERS  
		SET Addr = @DiaChi
		WHERE PartnerID = @MaDT
	END TRY

	BEGIN CATCH
		DECLARE @ErrorMsg VARCHAR(2000)
		SELECT @ErrorMsg = 'ERROR: ' + ERROR_MESSAGE()
		RAISERROR(@ErrorMsg, 16,1)
		ROLLBACK TRAN
		RETURN
	END CATCH
		
COMMIT TRAN
GO