USE qlbh_onl
GO

DROP PROC USP_CoDL1
DROP PROC USP_CoDL2
GO

--Trans1
CREATE
--ALTER
PROC USP_CoDL1
	@GiaSP int,
	@MaSP char(6)
AS
BEGIN
BEGIN TRAN

SET TRAN ISOLATION LEVEL REPEATABLE READ

	DECLARE @GiaSP_HT int
	SET @GiaSP_HT =(SELECT Price FROM PRODUCT WHERE ProductID = @MaSP)
	IF (@GiaSP = @GiaSP_HT)
	BEGIN
		PRINT 'New product price you want to change is the same as one before'
		ROLLBACK TRAN
		RETURN 1
	END

		ELSE
		WAITFOR DELAY '0:0:05'

	BEGIN TRY	
		UPDATE PRODUCT
		SET Price = @GiaSP
		WHERE ProductID = @MaSP
	END TRY

	BEGIN CATCH
		DECLARE @ErrorMsg VARCHAR(2000)
		SELECT @ErrorMsg = 'ERROR: ' + ERROR_MESSAGE()
		RAISERROR(@ErrorMsg, 16,1)
		ROLLBACK TRAN
		RETURN
	END CATCH
		
COMMIT TRAN
END
GO

--Trans2
CREATE
--ALTER
PROC USP_CoDL2
	@TenSP varchar(100),
	@MaSP char(6)
AS
BEGIN TRAN

SET TRAN ISOLATION LEVEL REPEATABLE READ

	DECLARE @TenSP_HT varchar(100)
	SET @TenSP_HT = (SELECT ProductName FROM PRODUCT WHERE ProductID = @MaSP)
	IF (@TenSP = @TenSP_HT)
	BEGIN
		PRINT 'New product name you want to change is the same as one before'  
		ROLLBACK TRAN
		RETURN 1
	END
		ELSE
		WAITFOR DELAY '0:0:05'

	BEGIN TRY
		UPDATE PRODUCT
		SET ProductName = @TenSP
		WHERE ProductID = @MaSP
	END TRY

	BEGIN CATCH
		DECLARE @ErrorMsg VARCHAR(2000)
		SELECT @ErrorMsg = 'ERROR: ' + ERROR_MESSAGE()
		RAISERROR(@ErrorMsg, 16,1)
		ROLLBACK TRAN
		RETURN
	END CATCH
		
COMMIT TRAN
GO